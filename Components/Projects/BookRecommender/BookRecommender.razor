@page "/BookRecommender"
@using static portfolio.Components.Projects.BookRecommender.BookCard
@inject BookService BookService

<div class="book-recommender">
    <h1 class="title">BlurbBridge: AI Book Recommendations!</h1>
    <h3 class="subtitle">Enter a book title to get similar recommendations</h3>
    <div class="search-container">
        <input type="text" class="search-input" placeholder="Enter a book title" @bind="BookTitle" @bind:event="oninput" />
        <button class="search-button" @onclick="CorrectTitle">
            @* <i class="fas fa-search"></i> Get Recommendations *@
            <img src="images/search.png" alt="Search" style="width: 32px;"/>
        </button>
    </div>

    @if (CorrectedTitles != null && CorrectedTitles.Any()) 
    {
        <div class="corrected-titles">
            <div class="book-list">
                @foreach (var title in CorrectedTitles)
                {
                    <a class="book-item @(IsSelected(title) ? "active" : "")" @onclick="() => SelectTitle(title)" data-title="@title">
                        <i class="fas fa-book"></i>
                        <span>@title</span>
                    </a>
                }
            </div>
        </div>
        <br />
        @if (!string.IsNullOrEmpty(SelectedTitle))
        {
            <div>
            <button class="search-button rounded-3" @onclick="GetRecommendations">
                <strong>
                    <i class="fas fa-search"></i> Find Similar Books!
                </strong>
            </button>
        </div>
        }
        <br />
        
    }

    @if (SimilarBooks != null && SimilarBooks.Any())
    {
        <div class="similar-books">
            <h2 class="section-title">Similar Books</h2>
            <div class="book-list">
                @foreach (var book in SimilarBooks)
                {
                    if (!string.IsNullOrEmpty(book))
                    {
                        <a class="book-item" @onclick="() => ShowBook(book)" data-title="@book">
                            <i class="fas fa-book"></i>
                            <span>@book</span>
                        </a>
                    }
                }
            </div>
        </div>
    }

    <BookCard CurrentBook="SelectedBook" IsVisible="isModalVisible" IsVisibleChanged="(visible) => isModalVisible = visible" />
</div>

@code {
    private Book SelectedBook { get; set; }

    private bool isModalVisible = false;
    private void ShowBook(string book)
    {
        Console.WriteLine($"Showing book: {book}");
        SelectedBook = new Book { Title = book, Description = "Loading...", CoverImageUrl = "images/loading.gif" };
        isModalVisible = true;
    }

    private void IsVisibleChanged(bool visible)
    {
        isModalVisible = visible;
    }
}