@using Books

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000;
        background: rgba(0, 0, 50, 0.7);
        backdrop-filter: blur(5px);
    }

    .modal-card {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1001;
        max-width: 800px;
        width: 90%;
        background-color: #ffffff;
        border-radius: 20px;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
        overflow: hidden;
    }

    .card-header {
        background-color: #f0f8ff;
        padding: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        margin: 0;
    }

    .card-img-top {
        max-height: 150px;
        width: auto;
        object-fit: cover;
        border-radius: 10px;
    }

    .card-body {
        padding: 20px;
    }

    .card-text {
        color: #555;
        line-height: 1.6;
    }

    .scroll-content {
        max-height: 400px;
        overflow-y: auto;
        padding-right: 10px;
    }

    .btn-close {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-close:hover {
        background-color: #0056b3;
    }
</style>

@if (IsVisible)
{
    <div class="modal-backdrop" @onclick="Close"></div>
    <div class="modal-card">
        <div class="card-header">
            <h5 class="card-title">@CurrentBook.Title</h5>
            @if (CurrentBook.CoverImg != null)
            {
                <img class="card-img-top" src="@CurrentBook.CoverImg" alt="@CurrentBook.Title">
            }
            else
            {
                <img class="card-img-top" src="/images/generic_book.png" alt="@CurrentBook.Title">
            }
        </div>
        <div class="card-body">
            <div class="scroll-content">
                @if (CurrentBook.Content != null)
                {
                    <p class="card-text">@CurrentBook.Content</p>
                }
                else
                {
                    <p class="card-text">No description available</p>
                }
            </div>
        </div>
        <div class="card-footer text-center">
            <button class="btn-close" @onclick="Close"></button>
        </div>
    </div>
}

@code {
    [Parameter]
    public BookResult CurrentBook { get; set; }

    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    private Task Close()
    {
        return IsVisibleChanged.InvokeAsync(false);
    }
}
